  - name: disable default node js
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs:20
    ansible.builtin.dnf: #RHEL 
      name: "{{item}}"
      state: installed
    loop:
    - nodejs 
    - mysql  

  - name: useradd expense
    ansible.builtin.user:
      name: expense

  - name: copying code
    ansible.builtin.import_role:
      name: common
      tasks_from: app-pre-req    

  # - name: create app dire
  #   ansible.builtin.file:
  #     path: /app
  #     state: directory

  # - name: download backend code
  #   ansible.builtin.get_url: 
  #     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
  #     dest: /tmp/backend.zip

  # - name: unzip 
  #   ansible.builtin.unarchive:
  #     src: /tmp/backend.zip
  #     dest: /app
  #     remote_src: yes
  
  - name: npm dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  # - name: copy backend service
  #   ansible.builtin.copy:
  #     src: backend.service
  #     dest: /etc/systemd/system/backend.service

  - name: copy backend service
    ansible.builtin.template:
      src: backend.service.j2
      dest: /etc/systemd/system/backend.service 

  - name: install python mysql depenencies
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9 

  - name: import data into mysql
    community.mysql.mysql_db:
      login_user: "{{ login_user }}"
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ DB_HOST }}"
      target: /app/schema/backend.sql
      state: import
      name: all

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: backend 
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes 
     





      










